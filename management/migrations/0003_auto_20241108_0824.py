# Generated by Django 5.1.1 on 2024-11-08 08:24

from django.db import migrations

def create_status(apps, schema_editor):
    Language = apps.get_model('teams', 'Language')
    English, _ = Language.objects.get_or_create(name='English')
    Korean, _ = Language.objects.get_or_create(name='Korean')

    ReportType = apps.get_model('management', 'ReportType')
    ReportTypeDisplayName = apps.get_model('management', 'ReportTypeDisplayName')

    reports = [
        # Harassment or Bullying
        {
            'name': 'harassment_bullying',
            'description': 'Harassment or Bullying',
            'english_display': 'Harassment or Bullying',
            'korean_display': '괴롭힘 또는 따돌림',
        },
        # Hate Speech
        {
            'name': 'hate_speech',
            'description': 'Hate Speech',
            'english_display': 'Hate Speech',
            'korean_display': '증오 발언',
        },
        # Threats of Violence
        {
            'name': 'threats_violence',
            'description': 'Threats of Violence',
            'english_display': 'Threats of Violence',
            'korean_display': '폭력 위협',
        },
        # Sexual Harassment or Inappropriate Content
        {
            'name': 'sexual_harassment',
            'description': 'Sexual Harassment or Inappropriate Content',
            'english_display': 'Sexual Harassment or Inappropriate Content',
            'korean_display': '성희롱 또는 부적절한 콘텐츠',
        },
        # Fraud or Scams
        {
            'name': 'fraud_scams',
            'description': 'Fraud or Scams',
            'english_display': 'Fraud or Scams',
            'korean_display': '사기 또는 사기 행위',
        },
        # Spam or Unsolicited Content
        {
            'name': 'spam_unsolicited',
            'description': 'Spam or Unsolicited Content',
            'english_display': 'Spam or Unsolicited Content',
            'korean_display': '스팸 또는 원치 않는 콘텐츠',
        },
        # Privacy Violations
        {
            'name': 'privacy_violations',
            'description': 'Privacy Violations',
            'english_display': 'Privacy Violations',
            'korean_display': '개인정보 침해',
        },
        # Illegal Activities
        {
            'name': 'illegal_activities',
            'description': 'Illegal Activities',
            'english_display': 'Illegal Activities',
            'korean_display': '불법 활동',
        },
        # Intellectual Property Infringement
        {
            'name': 'intellectual_property',
            'description': 'Intellectual Property Infringement',
            'english_display': 'Intellectual Property Infringement',
            'korean_display': '지적 재산권 침해',
        },
        # Self-Harm or Suicidal Behavior
        {
            'name': 'self_harm',
            'description': 'Self-Harm or Suicidal Behavior',
            'english_display': 'Self-Harm or Suicidal Behavior',
            'korean_display': '자해 또는 자살 행동',
        },
        # Child Exploitation
        {
            'name': 'child_exploitation',
            'description': 'Child Exploitation',
            'english_display': 'Child Exploitation',
            'korean_display': '아동 착취',
        },
        # Discrimination
        {
            'name': 'discrimination',
            'description': 'Discrimination',
            'english_display': 'Discrimination',
            'korean_display': '차별',
        },
        # Extremism or Terrorism
        {
            'name': 'extremism_terrorism',
            'description': 'Extremism or Terrorism',
            'english_display': 'Extremism or Terrorism',
            'korean_display': '극단주의 또는 테러리즘',
        },
        # Impersonation
        {
            'name': 'impersonation',
            'description': 'Impersonation',
            'english_display': 'Impersonation',
            'korean_display': '사칭',
        },
        # Violations of Terms of Service
        {
            'name': 'terms_violations',
            'description': 'Violations of Terms of Service',
            'english_display': 'Violations of Terms of Service',
            'korean_display': '서비스 약관 위반',
        },
        # Malware or Viruses
        {
            'name': 'malware_viruses',
            'description': 'Malware or Viruses',
            'english_display': 'Malware or Viruses',
            'korean_display': '악성 소프트웨어 또는 바이러스',
        },
        # Misleading or False Information
        {
            'name': 'misleading_information',
            'description': 'Misleading or False Information',
            'english_display': 'Misleading or False Information',
            'korean_display': '오해의 소지가 있는 정보 또는 거짓 정보',
        },
        # Unauthorized Access
        {
            'name': 'unauthorized_access',
            'description': 'Unauthorized Access',
            'english_display': 'Unauthorized Access',
            'korean_display': '무단 접근',
        },
        # Stalking
        {
            'name': 'stalking',
            'description': 'Stalking',
            'english_display': 'Stalking',
            'korean_display': '스토킹',
        },
        # Inappropriate Content
        {
            'name': 'inappropriate_content',
            'description': 'Inappropriate Content',
            'english_display': 'Inappropriate Content',
            'korean_display': '부적절한 콘텐츠',
        },
    ]

    for report in reports:
        report_type = ReportType.objects.create(
            name=report['name'],
            description=report['description']
        )
        ReportTypeDisplayName.objects.create(
            display_name=report['english_display'],
            language=English,
            report_type=report_type
        )
        ReportTypeDisplayName.objects.create(
            display_name=report['korean_display'],
            language=Korean,
            report_type=report_type
        )


class Migration(migrations.Migration):

    dependencies = [
        ('teams', '0002_alter_team_id'),
        ('management', '0002_reporttypedisplayname'),
    ]

    operations = [
        migrations.RunPython(create_status),
    ]
