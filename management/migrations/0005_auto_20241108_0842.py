# Generated by Django 5.1.1 on 2024-11-08 08:42

from django.db import migrations

def create_status(apps, schema_editor):
    Language = apps.get_model('teams', 'Language')
    English, _ = Language.objects.get_or_create(name='English')
    Korean, _ = Language.objects.get_or_create(name='Korean')

    InquiryType = apps.get_model('management', 'InquiryType')
    InquiryTypeDisplayName = apps.get_model('management', 'InquiryTypeDisplayName')

    inquiries = [
        # Account Assistance
        {
            'name': 'account_assistance',
            'description': 'Assistance with account-related issues',
            'english_display': 'Account Assistance',
            'korean_display': '계정 지원',
        },
        # Technical Support
        {
            'name': 'technical_support',
            'description': 'Help with technical issues or bugs',
            'english_display': 'Technical Support',
            'korean_display': '기술 지원',
        },
        # Content and Moderation
        {
            'name': 'content_moderation',
            'description': 'Issues related to content and moderation',
            'english_display': 'Content and Moderation',
            'korean_display': '콘텐츠 및 중재',
        },
        # Feedback and Suggestions
        {
            'name': 'feedback_suggestions',
            'description': 'Providing feedback or suggestions',
            'english_display': 'Feedback and Suggestions',
            'korean_display': '피드백 및 제안',
        },
        # Billing and Payments
        {
            'name': 'billing_payments',
            'description': 'Inquiries about billing or payments',
            'english_display': 'Billing and Payments',
            'korean_display': '결제 및 청구',
        },
        # Privacy and Data Protection
        {
            'name': 'privacy_data_protection',
            'description': 'Concerns about privacy or data protection',
            'english_display': 'Privacy and Data Protection',
            'korean_display': '개인정보 보호',
        },
        # Security Issues
        {
            'name': 'security_issues',
            'description': 'Reporting security vulnerabilities',
            'english_display': 'Security Issues',
            'korean_display': '보안 문제',
        },
        # Community Guidelines Clarifications
        {
            'name': 'community_guidelines',
            'description': 'Questions about community guidelines or policies',
            'english_display': 'Community Guidelines Clarifications',
            'korean_display': '커뮤니티 지침 문의',
        },
        # Appeals and Disputes
        {
            'name': 'appeals_disputes',
            'description': 'Appealing decisions or resolving disputes',
            'english_display': 'Appeals and Disputes',
            'korean_display': '항소 및 분쟁',
        },
        # Accessibility Support
        {
            'name': 'accessibility_support',
            'description': 'Assistance with accessibility features',
            'english_display': 'Accessibility Support',
            'korean_display': '접근성 지원',
        },
        # Legal and Compliance
        {
            'name': 'legal_compliance',
            'description': 'Legal inquiries or compliance issues',
            'english_display': 'Legal and Compliance',
            'korean_display': '법률 및 준수',
        },
        # Verification and Status Changes
        {
            'name': 'verification_status',
            'description': 'Requests for account verification or status changes',
            'english_display': 'Verification and Status Changes',
            'korean_display': '인증 및 상태 변경',
        },
        # Collaboration and Partnerships
        {
            'name': 'collaboration_partnerships',
            'description': 'Inquiries about collaborations or partnerships',
            'english_display': 'Collaboration and Partnerships',
            'korean_display': '협업 및 파트너십',
        },
        # Miscellaneous Questions
        {
            'name': 'miscellaneous_questions',
            'description': 'General or miscellaneous inquiries',
            'english_display': 'Miscellaneous Questions',
            'korean_display': '기타 질문',
        },
        # Reporting Staff Misconduct
        {
            'name': 'staff_misconduct',
            'description': 'Reporting inappropriate behavior by staff',
            'english_display': 'Reporting Staff Misconduct',
            'korean_display': '직원 비행 보고',
        },
        # User Support and Guidance
        {
            'name': 'user_support',
            'description': 'Help with using the website features',
            'english_display': 'User Support and Guidance',
            'korean_display': '사용자 지원 및 안내',
        },
        # Localization and Language Support
        {
            'name': 'localization_language_support',
            'description': 'Support for localization or language issues',
            'english_display': 'Localization and Language Support',
            'korean_display': '현지화 및 언어 지원',
        },
        # Community Building
        {
            'name': 'community_building',
            'description': 'Inquiries about building or managing communities',
            'english_display': 'Community Building',
            'korean_display': '커뮤니티 구축',
        },
        # Content Contribution
        {
            'name': 'content_contribution',
            'description': 'Submitting or collaborating on content',
            'english_display': 'Content Contribution',
            'korean_display': '콘텐츠 기여',
        },
        # Policy Feedback
        {
            'name': 'policy_feedback',
            'description': 'Providing feedback on site policies',
            'english_display': 'Policy Feedback',
            'korean_display': '정책 피드백',
        },
    ]

    for inquiry in inquiries:
        inquiry_type = InquiryType.objects.create(
            name=inquiry['name'],
            description=inquiry['description']
        )
        InquiryTypeDisplayName.objects.create(
            display_name=inquiry['english_display'],
            language=English,
            inquiry_type=inquiry_type
        )
        InquiryTypeDisplayName.objects.create(
            display_name=inquiry['korean_display'],
            language=Korean,
            inquiry_type=inquiry_type
        )


class Migration(migrations.Migration):

    dependencies = [
        ('management', '0004_remove_inquiry_status_inquiry_solved_and_more'),
    ]

    operations = [
    ]
